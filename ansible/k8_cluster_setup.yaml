---
- hosts: masters,workers
  remote_user: jay
  become: yes
  become_user: root
  become_method: sudo
  gather_facts: yes

  tasks:
    - name: create the kube user account
      user: name=kube append=yes state=present createhome=yes shell=/bin/bash

    - name: allow kube to use sudo without needing a password
      lineinfile:
        dest: /etc/sudoers
        line: 'kube ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'

    - name: set up authorized keys for the kube user
      authorized_key: user=kube key="{{item}}"
      with_file:
        - ~/.ssh/id_rsa.pub

    - name: update hosts files in each node, need a better way of doing this
      shell: |
        echo "192.168.193.20  master.example.com  master" >> /etc/hosts
        echo "192.168.193.30  worker0.example.com  worker-0" >> /etc/hosts
        echo "192.168.193.31  worker1.example.com  worker-1" >> /etc/hosts

    - name: disable firewall to make it easy for now
      shell: sudo ufw disable

    - name: disable swap
      shell: |
        sudo swapoff -a
        sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

    - name: allow iptables see bridge traffic
      copy:
        dest: "/etc/modules-load.d/k8s.conf"
        content: |
          br_netfilter

    - name: more bridge traffic stuff
      copy:
        dest: "/etc/sysctl.d/k8s.conf"
        content: |
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1

    - name: apply new settings
      shell: sudo sysctl --system

    - name: containerd pre-install config
      copy:
        dest: "/etc/modules-load.d/containerd.conf"
        content: |
          overlay
          br_netfilter

    - name: modprobe
      shell: |
        sudo modprobe overlay
        sudo modprobe br_netfilter

    - name: sysctl params setup
      copy:
        dest: "/etc/sysctl.d/99-kubernetes-cri.conf"
        content: |
          net.bridge.bridge-nf-call-iptables  = 1
          net.ipv4.ip_forward                 = 1
          net.bridge.bridge-nf-call-ip6tables = 1

    - name: apply new settings, again
      shell: sudo sysctl --system
    
    - name: install containerd
      shell: |
        sudo apt-get update
        sudo apt-get install -y containerd
        sudo mkdir -p /etc/containerd
        containerd config default | sudo tee /etc/containerd/config.toml
        sudo systemctl restart containerd

    - name: install and configure dependencies
      shell: |
        sudo apt-get update
        sudo apt-get install -y apt-transport-https ca-certificates curl
        sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg

    - name: add k8 repos
      shell: |
        echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list 

    - name: install kubelet, kubeadm and kubectl and pin the versions
      shell: |
        sudo apt-get update
        sudo apt-get install -y kubelet kubeadm kubectl
        sudo apt-mark hold kubelet kubeadm kubectl